# Generated by Django 3.2.10 on 2021-12-13 23:04

from django.db import migrations, models
import django.db.models.deletion
import products.models.images
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BathroomProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "verbose_name": "Bathroom Product",
                "verbose_name_plural": "Bathroom Products",
            },
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="DecorationsProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_decorationsproducts_related",
                        related_query_name="products_decorationsproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "decoration_product_type",
                    models.ManyToManyField(
                        related_name="decoration_product_types",
                        related_query_name="decoration_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Decoration",
                "verbose_name_plural": "Decoration",
            },
        ),
        migrations.CreateModel(
            name="FabricTextileProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_fabrictextileproducts_related",
                        related_query_name="products_fabrictextileproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "fabrictextile_product_type",
                    models.ManyToManyField(
                        related_name="fabrictextile_product_types",
                        related_query_name="fabrictextile_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fabric and Textile",
                "verbose_name_plural": "Fabric and Textile",
            },
        ),
        migrations.CreateModel(
            name="FurnitureProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_furnitureproducts_related",
                        related_query_name="products_furnitureproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "furniture_product_type",
                    models.ManyToManyField(
                        related_name="furniture_product_types",
                        related_query_name="furniture_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Furniture",
                "verbose_name_plural": "Furnitures",
            },
        ),
        migrations.CreateModel(
            name="HardwareToolProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_hardwaretoolproducts_related",
                        related_query_name="products_hardwaretoolproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "hardwaretool_product_type",
                    models.ManyToManyField(
                        related_name="hardwaretool_product_types",
                        related_query_name="hardwaretool_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hardware and Tool",
                "verbose_name_plural": "Hardware and Tool",
            },
        ),
        migrations.CreateModel(
            name="HomeApplianceProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_homeapplianceproducts_related",
                        related_query_name="products_homeapplianceproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "homeappliance_product_type",
                    models.ManyToManyField(
                        related_name="homeappliance_product_types",
                        related_query_name="homeappliance_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Home Appliance",
                "verbose_name_plural": "Home Appliances",
            },
        ),
        migrations.CreateModel(
            name="KitchenProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_kitchenproducts_related",
                        related_query_name="products_kitchenproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "kitchen_product_type",
                    models.ManyToManyField(
                        related_name="kitchen_product_types",
                        related_query_name="kitchen_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kitchen",
                "verbose_name_plural": "Kitchen",
            },
        ),
        migrations.CreateModel(
            name="LandscapeProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_landscapeproducts_related",
                        related_query_name="products_landscapeproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "landscape_product_type",
                    models.ManyToManyField(
                        related_name="landscape_product_types",
                        related_query_name="landscape_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Landscape and Garden",
                "verbose_name_plural": "Landscape and Garden",
            },
        ),
        migrations.CreateModel(
            name="LightProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_lightproducts_related",
                        related_query_name="products_lightproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "light_product_type",
                    models.ManyToManyField(
                        related_name="light_product_types",
                        related_query_name="light_product_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Light",
                "verbose_name_plural": "Lights",
            },
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "material_place",
                    models.CharField(
                        choices=[
                            ("INDOOR", "Indoor"),
                            ("OUTDOOR", "Outdoor"),
                            ("BOTH", "Both"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "material_category",
                    models.CharField(
                        choices=[
                            ("WALL", "Wall material"),
                            ("CEILING", "Ceiling material"),
                            ("FLOOR", "Floor material"),
                        ],
                        max_length=7,
                    ),
                ),
                ("thickness", models.CharField(blank=True, max_length=50)),
                ("size", models.CharField(blank=True, max_length=50)),
                ("shape", models.CharField(blank=True, max_length=50)),
                ("density", models.CharField(blank=True, max_length=50)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_material_related",
                        related_query_name="products_materials",
                        to="products.brand",
                    ),
                ),
                (
                    "material_type",
                    models.ManyToManyField(
                        related_name="material_types",
                        related_query_name="material_type",
                        to="products.Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Finish Material",
                "verbose_name_plural": "Finish Materials",
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name="SecurityProtectionProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_securityprotectionproducts_related",
                        related_query_name="products_securityprotectionproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "securityprotection_product_type",
                    models.ManyToManyField(
                        related_name="securityprotection_product_types",
                        related_query_name="securityprotection_product_type",
                        to="products.Category",
                    ),
                ),
                (
                    "supplier",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products_securityprotectionproducts_related",
                        related_query_name="products_securityprotectionproductss",
                        to="products.Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security and Protection",
                "verbose_name_plural": "Security and Protection",
            },
        ),
        migrations.CreateModel(
            name="RugsMatFloorProducts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=400)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL, will appear after you save for the first time",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="To add images, Add description images through the form below first and then insert the url of the image here",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("available", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "additional_fields",
                    models.JSONField(
                        blank=True,
                        help_text="To add extra fields, you can write a json. Delete the 'null' and start writing!",
                        null=True,
                    ),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True,
                        choices=[("BD", "Bangladesh"), ("CHN", "China")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_rugsmatfloorproducts_related",
                        related_query_name="products_rugsmatfloorproductss",
                        to="products.brand",
                    ),
                ),
                (
                    "rugmatfloor_product_type",
                    models.ManyToManyField(
                        related_name="rugmatfloor_product_types",
                        related_query_name="rugmatfloor_product_type",
                        to="products.Category",
                    ),
                ),
                (
                    "supplier",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products_rugsmatfloorproducts_related",
                        related_query_name="products_rugsmatfloorproductss",
                        to="products.Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rugs Mats and Floor",
                "verbose_name_plural": "Rugs Mats and Floor",
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    versatileimagefield.fields.VersatileImageField(
                        max_length=600,
                        upload_to=products.models.images.return_product_image_directory,
                    ),
                ),
                ("alt", models.CharField(max_length=128)),
                ("is_description_image", models.BooleanField(default=False)),
                (
                    "bathroom",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.bathroomproducts",
                    ),
                ),
                (
                    "decorations",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.decorationsproducts",
                    ),
                ),
                (
                    "fabric_textile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.fabrictextileproducts",
                    ),
                ),
                (
                    "furniture",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.furnitureproducts",
                    ),
                ),
                (
                    "hardware_tool",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.hardwaretoolproducts",
                    ),
                ),
                (
                    "home_appliances",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.homeapplianceproducts",
                    ),
                ),
                (
                    "kitchen",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.kitchenproducts",
                    ),
                ),
                (
                    "landscape_garden",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.landscapeproducts",
                    ),
                ),
                (
                    "light",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.lightproducts",
                    ),
                ),
                (
                    "material",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.material",
                    ),
                ),
                (
                    "rugs_mat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.rugsmatfloorproducts",
                    ),
                ),
                (
                    "security_protection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.securityprotectionproducts",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="material",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_material_related",
                related_query_name="products_materials",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="lightproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_lightproducts_related",
                related_query_name="products_lightproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="landscapeproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_landscapeproducts_related",
                related_query_name="products_landscapeproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="kitchenproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_kitchenproducts_related",
                related_query_name="products_kitchenproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="homeapplianceproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_homeapplianceproducts_related",
                related_query_name="products_homeapplianceproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="hardwaretoolproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_hardwaretoolproducts_related",
                related_query_name="products_hardwaretoolproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="furnitureproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_furnitureproducts_related",
                related_query_name="products_furnitureproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="fabrictextileproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_fabrictextileproducts_related",
                related_query_name="products_fabrictextileproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="decorationsproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_decorationsproducts_related",
                related_query_name="products_decorationsproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="bathroomproducts",
            name="bathroom_product_type",
            field=models.ManyToManyField(
                related_name="bathroom_product_types",
                related_query_name="bathroom_product_type",
                to="products.Category",
            ),
        ),
        migrations.AddField(
            model_name="bathroomproducts",
            name="brand",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products_bathroomproducts_related",
                related_query_name="products_bathroomproductss",
                to="products.brand",
            ),
        ),
        migrations.AddField(
            model_name="bathroomproducts",
            name="supplier",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_bathroomproducts_related",
                related_query_name="products_bathroomproductss",
                to="products.Supplier",
            ),
        ),
        migrations.AddConstraint(
            model_name="productimage",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", False),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", False),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", False),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", False),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", False),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", False),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", False),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", False),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", False),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", False),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", False),
                        ("security_protection__isnull", True),
                    ),
                    models.Q(
                        ("bathroom__isnull", True),
                        ("decorations__isnull", True),
                        ("fabric_textile__isnull", True),
                        ("furniture__isnull", True),
                        ("hardware_tool__isnull", True),
                        ("home_appliances__isnull", True),
                        ("kitchen__isnull", True),
                        ("landscape_garden__isnull", True),
                        ("light__isnull", True),
                        ("material__isnull", True),
                        ("rugs_mat__isnull", True),
                        ("security_protection__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="products_productimage_value_matches_type",
            ),
        ),
    ]
